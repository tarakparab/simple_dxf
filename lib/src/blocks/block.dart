import '../entities/entity.dart';
// ! import '../tables/table.dart';

import '../group_codes.dart';

class Block {
  Block({
    required this.basePoint,
    required this.entity,
    required this.flag,
  }) {
    incrementCount();
  }

  final Point basePoint;
  // ! final layer = LAYEREntry.zero;
  final Entity entity;

  /// Block-type flags (bit-coded values, may be combined):
  /// - 0 = Indicates none of the following flags apply
  /// - 1 = This is an anonymous block generated by hatching, associative dimensioning, other internal operations, or an application
  /// - 2 = This block has non-constant attribute definitions (this bit is not set if the block has any attribute definitions that are constant, or has no attribute definitions at all)
  /// - 4 = This block is an external reference (xref)
  /// - 8 = This block is an xref overlay
  /// - 16 = This block is externally dependent
  /// - 32 = This is a resolved external reference, or dependent of an external reference (ignored on input)
  /// - 64 = This definition is a referenced external reference (ignored on input)
  int flag;

  static var count = -1;
  static void incrementCount() => count++;
  String get name => '*U$count';

  @override
  String toString() {
    return '${GroupCode.type('BLOCK')}'
        // ! '\n${GroupCode.layerName(layer)}'
        '\n${GroupCode.name(name)}' // TODO check if the name can be any name
        '\n${GroupCode.integer(70, flag)}'
        '\n$basePoint'
        '\n${GroupCode.otherText(name)}'
        '\n$entity'
        '\n${GroupCode.type('ENDBLK')}';
  }
}
